package inheritance;

public class AnimalTest04 {
    public static void main(String[] args) {
        // 인터페이스 : be able to "무엇을 할 수 있는"
        // 추상 메서드를 할 수 있는 것이 강제된다.
        // Q1. 상속관계에서 상위 클래스는 하위 클래스에게 물려줄 특성이
        // 많으면 ? (ㅇ)    적으면 ?
        // 객체 지향 설계 원픽 LSP (리스코프 치환 원칙)
        // Q2. 인터페이스에서 구현을 강제할 메서드가
        // 많으면 ?        적으면 ? (ㅇ)
        // 객체 지향의 설계 원칙 ISP(인터페이스 분할 원칙)
        날수있는 나는애들1 = new 박쥐();
        날수있는 나는애들2 = new 참새();

        나는애들1.fly();
        나는애들2.fly();

        헤엄칠수있는[] 헤엄치는애들 = new 헤엄칠수있는[2];
        헤엄치는애들[0] = new 고래();
        헤엄치는애들[1] = new 펭귄();

        for (헤엄칠수있는 헤엄치는동물 : 헤엄치는애들) {
            헤엄치는동물.swim();

        }

    }
}
