package design_pattern;

public class DesignPattern {
    /**
     * 소프트웨어 디자인 특정 문맥에서 공통적으로 발생하는 문제에 대해
     * 재사용 가능한 해결책 모음
     * 
     * 1994년 GoF(Gang of Four) 4인방이 디자인 패턴에 관한 책을 저술한 후 널리 퍼진 관행 및 형식
     * (23가지 패턴)
     *  
     *  1. 생성 패턴 (Creational)
     *      - 싱글턴
     *      - 팩토리 메소드
     *      - 빌더 패턴
     *      + 객체의 생성과 조합을 캡슐화해서 프로그램이 변경되어도 영향을 크게 받지 않는 유연성 제공
     *      
     *  2. 구조 패턴 (Structure)     
     *      - 어댑터
     *      - 데코레이터
     *      - 프록시
     *      - 퍼사드 패턴(Facade)
     *      + 서로 다른 인터페이스를 지닌 객체를 묶거나 새로운 기능을 제공하는 패턴
     *      
     *  3. 행위 패턴
     *      - 옵저버
     *      - 템플릿 메서드
     *      - 스트레티지 (전략)
     *      + 객체의 역할을 분배히면서 결합도를 최소화
     */
}
